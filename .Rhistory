test$dow = as.factor(test$dow)
test$hotel_cluster = as.factor(test$hotel_cluster)
test$mobile = as.factor(test$mobile)
test$package = as.factor(test$package)
test$room = as.factor(test$room)
test$type = as.factor(test$type)
test$user_continent = as.factor(test$user_continent)
str(train)
library(randomForest)
system.time(rf <- randomForest(hotel_cluster~.,
data=train,
importance=TRUE,
keep.forest=TRUE,
ntree=200))
pred = predict(rf, test[,-8])
names(test)
pred = predict(rf, test[,-8])
table(as.character(pred) == as.character(test[,8]))/nrow(test)
ntree=500))
system.time(rf <- randomForest(hotel_cluster~.,
data=train,
importance=TRUE,
keep.forest=TRUE,
ntree=500))
pred = predict(rf, test[,-8])
table(as.character(pred) == as.character(test[,8]))/nrow(test)
importance(rf)
class(importance(rf))
dim(importance(rf))
a = rf[,43]
a = importance(rf)[,43]
a
nn = names(a)
vv = as.numeric(a)
nnn = order(vv, decreasing = TRUE)
vvv = sort(vv, decreasing = TRUE)
b = as.data.frame(cbind(nnn,vvv))
b
names(a)
nn = names(a)
vv = as.numeric(a)
nnn = nn[order(vv, decreasing = TRUE)]
vvv = sort(vv, decreasing = TRUE)
b = as.data.frame(cbind(nnn,vvv))
b
b = as.data.frame(cbind(nnn, round(vvv,2)))
b
b = as.data.frame(cbind(nnn, round(vvv,3)))
b
names(b) = c("variable","importance")
b
b = as.data.frame(cbind(nnn, round(vvv,4)))
names(b) = c("variable","importance")
b
b = as.data.frame(cbind(nnn, round(vvv,0)))
names(b) = c("variable","importance")
b
data = read.csv("data/csv2/50-628-8250.csv")
data = data[which(rowSums(is.na(data))==0), ]
data = data[which(data$booking==1), ]
train = data[which(data$year==2013), ]
test = data[which(data$year==2014), ]
train = train[, c("dist","ci_day","co_day","plan","hour",
"dow","stay","channel","hotel_cluster")]
test = test[, c("dist","ci_day","co_day","plan","hour",
"dow","stay","channel","hotel_cluster")]
names(train)
range(data$plan)
range(data$stay)
data = read.csv("data/csv2/50-628-8250.csv")
table(rowSums(is.na(data)))
data = data[which(rowSums(is.na(data))==0), ]
data = data[which(data$booking==1), ]
train = data[which(data$year==2013), ]
test = data[which(data$year==2014), ]
train = train[, c("dist","ci_day","co_day","plan","hour",
"dow","stay","channel","hotel_cluster")]
test = test[, c("dist","ci_day","co_day","plan","hour",
"dow","stay","channel","hotel_cluster")]
train$channel = as.factor(train$channel)
train$dow = as.factor(train$dow)
train$hotel_cluster = as.factor(train$hotel_cluster)
test$channel = as.factor(test$channel)
test$dow = as.factor(test$dow)
test$hotel_cluster = as.factor(test$hotel_cluster)
library(randomForest)
for(i in c(10,50,100,150,200,250)){
system.time(rf <- randomForest(hotel_cluster~.,
data=train,
importance=TRUE,
keep.forest=TRUE,
ntree=i))
pred = predict(rf, test[,-9])
print(table(as.character(pred) == as.character(test[,9]))/nrow(test))
}
library(xgboost)
install.packages("xgboost")
0.2000758+0.1994651+0.1977594
(0.2000758+0.1994651+0.1977594)/3
(0.2411397+0.2367174+0.2359593)/3
(0.2472045+0.2464885+0.246299)/3
(0.2490155+0.2468465+0.249205)/3
(0.2487839+0.2504685+0.250974)/3
(0.2506791+0.2492893+0.2501527)/3
aa = c((0.2000758+0.1994651+0.1977594)/3,
(0.2411397+0.2367174+0.2359593)/3,
(0.2472045+0.2464885+0.246299)/3,
(0.2490155+0.2468465+0.249205)/3,
(0.2487839+0.2504685+0.250974)/3,
(0.2506791+0.2492893+0.2501527)/3)
aa
plot(c(10,50,100,150,200,250), aa)
plot(c(10,50,100,150,200,250), aa, type="l")
plot(c(10,50,100,150,200,250), aa, type="l", xlab="Number of Tree", main="Accuracy against Number of Tree")
plot(c(10,50,100,150,200,250), aa, type="l", ylab="Accuracy",xlab="Number of Tree", main="Accuracy against Number of Tree")
plot(c(10,50,100,150,200,250), aa, type="b", ylab="Accuracy",xlab="Number of Tree", main="Accuracy against Number of Tree")
system.time(rf <- randomForest(hotel_cluster~.,
data=train,
importance=TRUE,
keep.forest=TRUE,
ntree=100))
pred = predict(rf, test[,-9], type="prob")
dim(pred)
pred[1,]
pred[2,]
pool = colnames(pred)
pool
apply(pred, 1, order, decreasing=FALSE)
dim(apply(pred, 1, order, decreasing=FALSE))
ans = t(apply(pred, 1, order, decreasing=FALSE))
dim(ans)
ans[1,]
pred[1,]
order(pred[1,])
ans = t(apply(pred, 1, order, decreasing=TRUE))
dim(ans)
ans[1,]
ans2 = ans[,1:5]
head(ans2)
pool[ans2]
head(ans)
head(ans2)
head(pool[ans2])
pred[1,]
ans3=matrix(pool[ans2], ncol=5, byrow=TRUE)
head(ans3)
table(ans[,1] == as.character(test[,8]))
2518/(2518+44969)
head(pred[1,])
head(pred[1:2,])
head(pred[1:5,])
head(ans3)
head(ans2)
head(pool[ans2])
pool[31]
ans3=matrix(pool[ans2], ncol=5, byrow=FALSE)
head(ans3)
pred[1:2,]
table(ans[,1] == as.character(test[,8]))
table(ans3[,1] == as.character(test[,8]))
head(ans3)
head(as.character(test[,8]))
table(ans3[,1] == as.character(test[,9]))
table(ans3[,1] == as.character(test[,9]))/nrow(test)
head(as.numeric(ans3[,1] == as.character(test[,9])))
table(as.numeric(ans3[,1] == as.character(test[,9])))
a1 = as.numeric(ans3[,1] == as.character(test[,9]))
a1 = as.numeric(ans3[,1] == as.character(test[,9]))
a2 = as.numeric(ans3[,2] == as.character(test[,9]))
a3 = as.numeric(ans3[,3] == as.character(test[,9]))
a4 = as.numeric(ans3[,4] == as.character(test[,9]))
a5 = as.numeric(ans3[,5] == as.character(test[,9]))
mean(a1*1+a2*0.5+a3*0.333+a4*0.25+a5*0.2)
dim(data)
dim(data)
names(data)
setwd("~/Github/expedia-hotel-recommendations")
f = list.files("data/csv2")
f
for(i in 1:length(f)){
print(i)
}
for(i in 1:length(f)){
print(paste("data/csv2/", f[i]))
}
print(paste0("data/csv2/", f[i]))
for(i in 1:length(f)){
print(paste0("data/csv2/", f[i]))
}
tests = list(10)
tests
tests = vector(mode="list", length=10)
tests
preds = vector(mode="list", length=10)
setwd("~/Github/expedia-hotel-recommendations")
f = list.files("data/csv2")
tests = vector(mode="list", length=10)
preds = vector(mode="list", length=10)
for(i in 1:length(f)){
data = read.csv(paste0("data/csv2/", f[i]))
data = data[which(rowSums(is.na(data))==0), ]
data = data[which(data$booking==1), ]
train = data[which(data$year==2013), ]
test = data[which(data$year==2014), ]
train = train[, c("dist","ci_day","co_day","plan","hour",
"dow","stay","channel","hotel_cluster")]
test = test[, c("dist","ci_day","co_day","plan","hour",
"dow","stay","channel","hotel_cluster")]
train$channel = as.factor(train$channel)
train$dow = as.factor(train$dow)
train$hotel_cluster = as.factor(train$hotel_cluster)
test$channel = as.factor(test$channel)
test$dow = as.factor(test$dow)
test$hotel_cluster = as.factor(test$hotel_cluster)
library(randomForest)
rf <- randomForest(hotel_cluster~.,
data=train, importance=TRUE,
keep.forest=TRUE, ntree=100))
pred = predict(rf, test[,-9], type="prob")
pool = colnames(pred)
ans = t(apply(pred, 1, order, decreasing=TRUE))
ans2 = ans[,1:5]
preds[[i]]=matrix(pool[ans2], ncol=5, byrow=FALSE)
tests[[i]]=as.character(test[,9])
print(i)
}
setwd("~/Github/expedia-hotel-recommendations")
f = list.files("data/csv2")
tests = vector(mode="list", length=10)
preds = vector(mode="list", length=10)
for(i in 1:length(f)){
data = read.csv(paste0("data/csv2/", f[i]))
data = data[which(rowSums(is.na(data))==0), ]
data = data[which(data$booking==1), ]
train = data[which(data$year==2013), ]
test = data[which(data$year==2014), ]
train = train[, c("dist","ci_day","co_day","plan","hour",
"dow","stay","channel","hotel_cluster")]
test = test[, c("dist","ci_day","co_day","plan","hour",
"dow","stay","channel","hotel_cluster")]
train$channel = as.factor(train$channel)
train$dow = as.factor(train$dow)
train$hotel_cluster = as.factor(train$hotel_cluster)
test$channel = as.factor(test$channel)
test$dow = as.factor(test$dow)
test$hotel_cluster = as.factor(test$hotel_cluster)
library(randomForest)
rf <- randomForest(hotel_cluster~.,
data=train, importance=TRUE,
keep.forest=TRUE, ntree=100)
pred = predict(rf, test[,-9], type="prob")
pool = colnames(pred)
ans = t(apply(pred, 1, order, decreasing=TRUE))
ans2 = ans[,1:5]
preds[[i]]=matrix(pool[ans2], ncol=5, byrow=FALSE)
tests[[i]]=as.character(test[,9])
print(i)
}
setwd("~/Github/expedia-hotel-recommendations")
f = list.files("data/csv2")
tests = vector(mode="list", length=10)
preds = vector(mode="list", length=10)
for(i in 1:length(f)){
data = read.csv(paste0("data/csv2/", f[i]))
data = data[which(rowSums(is.na(data))==0), ]
data = data[which(data$booking==1), ]
train = data[which(data$year==2013), ]
test = data[which(data$year==2014), ]
train = train[, c("dist","ci_day","co_day","plan","hour",
"dow","stay","channel","hotel_cluster")]
test = test[, c("dist","ci_day","co_day","plan","hour",
"dow","stay","channel","hotel_cluster")]
train$channel = as.factor(train$channel)
train$dow = as.factor(train$dow)
train$hotel_cluster = as.factor(train$hotel_cluster)
test$channel = as.factor(test$channel)
test$dow = as.factor(test$dow)
test$hotel_cluster = as.factor(test$hotel_cluster)
library(randomForest)
rf <- try(randomForest(hotel_cluster~.,
data=train, importance=TRUE,
keep.forest=TRUE, ntree=100),TRUE)
pred = try(predict(rf, test[,-9], type="prob"),TRUE)
pool = try(colnames(pred),TRUE)
ans = try(t(apply(pred, 1, order, decreasing=TRUE)),TRUE)
ans2 = try(ans[,1:5],TRUE)
preds[[i]]=try(matrix(pool[ans2], ncol=5, byrow=FALSE),TRUE)
tests[[i]]=try(as.character(test[,9]),TRUE)
print(i)
}
head(tests[[1]])
head(tests[[2]])
head(tests[[3]])
head(tests[[4]])
head(tests[[5]])
head(tests[[6]])
head(tests[[7]])
head(tests[[8]])
head(tests[[9]])
head(tests[[20]])
head(tests[[20]])
head(tests[[10]])
head(pred[[1]])
head(preds[[1]])
head(preds[[2]])
head(preds[[3]])
head(preds[[4]])
head(preds[[5]])
head(preds[[6]])
head(preds[[7]])
head(preds[[8]])
head(preds[[9]])
head(preds[[10]])
for(i in correct){
table(preds[[i]][,1] == tests[[i]])/nrow(tests[[i]])
}
correct = c(1,3,5,6,7,8,10)
for(i in correct){
table(preds[[i]][,1] == tests[[i]])/nrow(tests[[i]])
}
for(i in correct){
table((preds[[i]])[,1] == tests[[i]])/nrow(tests[[i]])
}
dim(preds[[1]])
dim(preds[[1]][,1])
dim((preds[[1]])[,1])
class(preds[[1]])
a = preds[[1]]
a[,1]
preds[[1]][[,1]]
preds[[1]][,1]
length(preds[[1]][,1])
length(tests[[i]])
for(i in correct){
table(preds[[1]][,1] == tests[[i]])/length(tests[[i]])
}
for(i in correct){
print(table(preds[[i]][,1] == tests[[i]])/length(tests[[i]]))
}
f[correct]
for(i in correct){
#print(table(preds[[i]][,1] == tests[[i]])/length(tests[[i]]))
a1 = as.numeric(preds[[i]][,1] == tests[[i]])
a2 = as.numeric(preds[[i]][,2] == tests[[i]])
a3 = as.numeric(preds[[i]][,3] == tests[[i]])
a4 = as.numeric(preds[[i]][,4] == tests[[i]])
a5 = as.numeric(preds[[i]][,5] == tests[[i]])
print(mean(a1*1+a2*0.5+a3*0.333+a4*0.25+a5*0.2))
}
data = read.csv("data/csv2/50-628-8250.csv")
dim(data)
data = data[which(rowSums(is.na(data))==0), ]
dim(data)
data = data[which(data$booking==1), ]
dim(data)
train = data[which(data$year==2013), ]
dim(train)
for(i in correct){
data = read.csv(paste0("data/csv2/", f[i]))
data = data[which(rowSums(is.na(data))==0), ]
data = data[which(data$booking==1), ]
train = data[which(data$year==2013), ]
print(nrow(train))
}
2742+ 7553+30431+12339+5746+4268+ 5703
a = Reduce(rbind, preds)
b = Reduce(rbind, tests)
b = Reduce(c, tests)
(a[,1] == b)/length(b)
head(a)
head(preds[[1]])
head(b)
class((a[,1] == b))
nrow(a)
length(b)
for(i in correct){}
for(i in correct){print(nrow(preds[[i]]))}
sapply(correct, function(i) nrow(preds[[i]]))
sum(sapply(correct, function(i) nrow(preds[[i]])))
sapply(correct, function(i) length(tests[[i]])
)
sum(sapply(correct, function(i) length(tests[[i]])))
b = Reduce(c, tests)
length(b)
do.call(tests, c)
b = do.call(c, tests)
length(b)
c(tests[[1]], test[[2]])
c(tests[[1]], tests[[2]])
b=(tests[[1]],tests[[3]],tests[[5]],tests[[6]],tests[[7]],tests[[8]],tests[[10]])
b=c(tests[[1]],tests[[3]],tests[[5]],tests[[6]],tests[[7]],tests[[8]],tests[[10]])
length(b)
(a[,1] == b)/length(b)
a = Reduce(rbind, preds)
b=c(tests[[1]],tests[[3]],tests[[5]],tests[[6]],tests[[7]],tests[[8]],tests[[10]])
(a[,1] == b)/length(b)
nrow(a)
length(b)
sum(sapply(correct, function(i) nrow(preds[[i]])))
a=rbind(preds[[1]],preds[[3]],preds[[5]],preds[[6]],preds[[7]],preds[[8]],preds[[10]])
b=c(tests[[1]],tests[[3]],tests[[5]],tests[[6]],tests[[7]],tests[[8]],tests[[10]])
(a[,1] == b)/length(b)
table((a[,1] == b))/length(b)
a1 = as.numeric(a[,1] == b)
a2 = as.numeric(a[,2] == b)
a3 = as.numeric(a[,3] == b)
a4 = as.numeric(a[,4] == b)
a5 = as.numeric(a[,5] == b)
mean(a1*1+a2*0.5+a3*0.333+a4*0.25+a5*0.2))
mean(a1*1+a2*0.5+a3*0.333+a4*0.25+a5*0.2)
setwd("~/Github/expedia-hotel-recommendations")
f = list.files("data/csv2")
tests = vector(mode="list", length=10)
preds = vector(mode="list", length=10)
for(i in 1:length(f)){
data = read.csv(paste0("data/csv2/", f[i]))
data = data[which(rowSums(is.na(data))==0), ]
data = data[which(data$booking==1), ]
train = data[which(data$year==2013), ]
test = data[which(data$year==2014), ]
train = train[ , -c(1,3,10,12,13,19,23,24,25)]
test = test[ , -c(1,3,10,12,13,19,23,24,25)]
print(nrow(train))
train$channel = as.factor(train$channel)
train$dow = as.factor(train$dow)
train$hotel_cluster = as.factor(train$hotel_cluster)
train$mobile = as.factor(train$mobile)
train$package = as.factor(train$package)
train$room = as.factor(train$room)
train$type = as.factor(train$type)
train$user_continent = as.factor(train$user_continent)
test$channel = as.factor(test$channel)
test$dow = as.factor(test$dow)
test$hotel_cluster = as.factor(test$hotel_cluster)
test$mobile = as.factor(test$mobile)
test$package = as.factor(test$package)
test$room = as.factor(test$room)
test$type = as.factor(test$type)
test$user_continent = as.factor(test$user_continent)
library(randomForest)
rf <- try(randomForest(hotel_cluster~.,
data=train, importance=TRUE,
keep.forest=TRUE, ntree=100),TRUE)
pred = try(predict(rf, test[,-8], type="prob"),TRUE)
pool = try(colnames(pred),TRUE)
ans = try(t(apply(pred, 1, order, decreasing=TRUE)),TRUE)
ans2 = try(ans[,1:5],TRUE)
preds[[i]]=try(matrix(pool[ans2], ncol=5, byrow=FALSE),TRUE)
tests[[i]]=try(as.character(test[,8]),TRUE)
print(i)
}
head(preds[[1]])
head(preds[[2]])
head(preds[[3]])
head(preds[[4]])
head(preds[[5]])
head(preds[[6]])
head(preds[[7]])
head(preds[[8]])
head(preds[[9]])
head(preds[[10]])
head(preds[[11]])
setwd("~/Github/expedia-hotel-recommendations")
f = list.files("data/csv2")
tests = vector(mode="list", length=10)
preds = vector(mode="list", length=10)
for(i in 1:length(f)){
data = read.csv(paste0("data/csv2/", f[i]))
data = data[which(rowSums(is.na(data))==0), ]
train = data[which(data$year==2013), ]
test = data[which(data$year==2014), ]
train = train[ , -c(1,3,10,12,13,19,23,24,25)]
test = test[ , -c(1,3,10,12,13,19,23,24,25)]
print(nrow(train))
train$channel = as.factor(train$channel)
train$dow = as.factor(train$dow)
train$hotel_cluster = as.factor(train$hotel_cluster)
train$mobile = as.factor(train$mobile)
train$package = as.factor(train$package)
train$room = as.factor(train$room)
train$type = as.factor(train$type)
train$user_continent = as.factor(train$user_continent)
test$channel = as.factor(test$channel)
test$dow = as.factor(test$dow)
test$hotel_cluster = as.factor(test$hotel_cluster)
test$mobile = as.factor(test$mobile)
test$package = as.factor(test$package)
test$room = as.factor(test$room)
test$type = as.factor(test$type)
test$user_continent = as.factor(test$user_continent)
library(randomForest)
rf <- try(randomForest(hotel_cluster~.,
data=train, importance=TRUE,
keep.forest=TRUE, ntree=100),TRUE)
pred = try(predict(rf, test[,-8], type="prob"),TRUE)
pool = try(colnames(pred),TRUE)
ans = try(t(apply(pred, 1, order, decreasing=TRUE)),TRUE)
ans2 = try(ans[,1:5],TRUE)
preds[[i]]=try(matrix(pool[ans2], ncol=5, byrow=FALSE),TRUE)
tests[[i]]=try(as.character(test[,8]),TRUE)
print(i)
}
head(preds[[1]])
head(preds[[2]])
head(preds[[3]])
head(preds[[4]])
head(preds[[5]])
head(preds[[6]])
head(preds[[7]])
head(preds[[8]])
head(preds[[9]])
head(preds[[10]])
